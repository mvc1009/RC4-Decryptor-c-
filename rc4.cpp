#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define MAX_LEN 10000

int RC4(unsigned char * data, unsigned char * key, const int data_len, const int key_len){
    unsigned char S[256];
    unsigned char T[256];
    unsigned char keystream[MAX_LEN];
    int i;
    int j;
    int y;
    unsigned char temp = 0;

    // Initialize S and T vect  ors
    for(i=0; i<256; i++){
        S[i] = i;
        T[i] = key[i % key_len];
    }

    // KSA -> Permutation
    j = 0;
    for(i=0; i<256; i++){
        j = (j + S[i] + T[i]) % 256;
        //swap
        temp = S[i];
        S[i] = S[j];
        S[j] = temp;
    }

    // PRGA -> Generates a Keystream
    i = 0;
    j = 0;
    for(y=0; y<data_len; y++){
        i = (i + 1) % 256;
        j = (j + S[i]) % 256;

        // swap
        temp = 0;
        temp = S[i];
        S[i] = S[j];
        S[j] = temp;

        temp = (S[i] + S[j]) % 256;
        keystream[y] =  S[temp];
    }

    // XOR -> Data with PRGA Keystream
    for(i=0; i<data_len; i++){
        data[i] = data[i] ^ keystream[i];
    }
    return 0;
}


int main(void) {

    int i;

    unsigned char data[] = {0x17, 0xd7, 0xf4, 0x65, 0x47, 0xdc, 0x0a, 0x72, 0xa7, 0x19, 0x0b, 0x79, 0x26, 0xe6, 0x10, 0xc4, 0x5b, 0x15, 0x7d, 0xf4, 0x37, 0x5f, 0xf0, 0xcc, 0x1a, 0xca, 0x9e, 0xbe, 0x4c, 0xe3, 0xdb, 0x6c, 0xa0, 0x7a, 0x01, 0xb0, 0x43, 0x21, 0x3e, 0x3e, 0x9f, 0x1c, 0xc4, 0x4f, 0xb0, 0xf4, 0xfc, 0x2f, 0x67, 0x1a, 0x1c, 0x28, 0x49, 0x58, 0x75, 0x9c, 0x57, 0xa3, 0x58, 0xb5, 0x1b, 0x50, 0xec, 0x81, 0x22, 0x66, 0xaf, 0x9f, 0x82, 0xf4, 0x36, 0x28, 0x4d, 0x5f, 0x27, 0xbf, 0xe1, 0xef, 0xe5, 0xb8, 0x46, 0x26, 0x6f, 0xa9, 0x43, 0x9a, 0xfc, 0x23, 0x85, 0x4d, 0x03, 0x42, 0x2b, 0xb0, 0xa9, 0xc9, 0xf4, 0xc2, 0x11, 0xfd, 0xac, 0x5c, 0xd0, 0x3d, 0x80, 0x4e, 0x36, 0xef, 0xe6, 0x25, 0x7d, 0x88, 0x9f, 0x5b, 0x30, 0x1f, 0xbc, 0x7e, 0xa9, 0x7d, 0x1d, 0xe7, 0xd9, 0xa3, 0xe3, 0x4b, 0x84, 0xe6, 0xc9, 0x0c, 0xc2, 0x59, 0x98, 0xb6, 0xae, 0xae, 0x56, 0xce, 0x62, 0x22, 0x35, 0x27, 0xff, 0xe3, 0x0a, 0x27, 0x97, 0xcc, 0x38, 0x55, 0x16, 0x03, 0xc8, 0x4a, 0x9a, 0xaa, 0x03, 0x48, 0x7b, 0x25, 0x7e, 0x03, 0x8f, 0x7d, 0xf9, 0x5e, 0xb7, 0x59, 0xab, 0x24, 0xc5, 0x86, 0x4b, 0x3f, 0xdb, 0x35, 0x37, 0x08, 0x0d, 0x18, 0x95, 0x76, 0x08, 0x20, 0xe6, 0x0b, 0xb8, 0xbb, 0x54, 0xb1, 0x76, 0xe2, 0x9f, 0xc5, 0x89, 0xbe, 0x87, 0xf5, 0x6c, 0xea, 0xd4, 0x8a, 0xb2, 0xb0, 0xa1, 0xf9, 0x1c, 0xb4, 0x8e, 0xa2, 0xb9, 0xe8, 0x78, 0x54, 0x00, 0x3c, 0xad, 0x23, 0xed, 0xd3, 0x88, 0x4d, 0xa0, 0xcc, 0xf9, 0x9f, 0xdd, 0x92, 0x39, 0x61, 0x68, 0xe3, 0xa9, 0x7d, 0x90, 0x92, 0xec, 0xed, 0x38, 0x31, 0xc1, 0xe8, 0xcc, 0xdf, 0x4b, 0xeb, 0x48, 0x3e, 0xb7, 0xbc, 0x80, 0x12, 0xa6, 0x19, 0x7f, 0xd7, 0x81, 0x8f, 0xb6, 0xdc, 0xe4, 0x5d, 0xae, 0xc6, 0x7a, 0x8a, 0x24, 0xc0, 0x25, 0x81, 0xe2, 0x45, 0xb5, 0x97, 0x12, 0xa7};
    unsigned char key[] = {0x4b, 0x65, 0x79};

    printf("\nRC4 algorithm:\n\n");
    printf("[+] Encrypting %d bytes\n", sizeof(data));
    
    printf("\n\n[!] Encrypted Data\n");
    printf("{");
    for(i=0; i<sizeof(data); i++){
        printf("0x%.2X, ", data[i]);
    }
    
    RC4(data, key, sizeof(data), sizeof(key));
    
    printf("\n\n[!] Plaintext Data\n");
    printf("{");
    for(i=0; i<sizeof(data); i++){
        printf("0x%.2X, ", data[i]);
    }
}